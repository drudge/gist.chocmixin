{
  "name": "gister",
  "version": "0.2.1",
  "author": {
    "name": "Josh Perez",
    "email": "josh@goatslacker.com",
    "url": "http://github.com/goatslacker"
  },
  "description": "gist API wrapper for editing, creating and retrieving.",
  "homepage": "http://github.com/goatslacker/gister",
  "keywords": [
    "gist",
    "github"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/goatslacker/gister.git"
  },
  "license": {
    "type": "MIT",
    "url": "http://www.opensource.org/licenses/mit-license.php"
  },
  "dependencies": {
    "request": "2.2.x"
  },
  "devDependencies": {
    "vows": "0.5.x",
    "koala-t": "latest"
  },
  "main": "gister.js",
  "scripts": {
    "test": "vows"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "optionalDependencies": {},
  "readme": "# gister\n\n[![Build Status](https://secure.travis-ci.org/goatslacker/gister.png)](http://travis-ci.org/goatslacker/gister)\n\nnode.js module for gist.github.com -- edit, create, and retrieve gists.\n\n## The Basics\n\n`gister` is a way to create, edit and retrieve gists programatically.\n\n### Install npm\n\nInside your project's directory\n\n    npm install gister\n\n### require it\n\n    var Gister = require('gister');\n\n### Create the object\n\n    var gist = new Gister({\n      username: \"octocat\",\n      password: \"secret\"\n    });\n\n    // You can call .auth() method to retrieve an OAuth token and store that instead of\n    // the user's name and password\n\n### Events\n\ngister will emit events back at you.\n\nEach event takes a callback as its second parameter.\n\n    error       // Errors received from response\n    gist        // The gist you're retrieving via .get()\n    edited      // GH Response for edited gists\n    created     // Response for created gists\n    token       // OAuth token returned\n    starred     // GH Response for starred gists\n    unstarred   // Response when unstarring a gist\n    is_starred  // Boolean. Checks if a gist is starred or not\n    deleted     // Response for deleted gists\n    forked      // Response for forked gists\n\n### Creating a gist\n\n    gist.create({ \"my_file.txt\": \"Hello World\" });\n\n### Editing a gist\n\n    gist.edit({ \"flip.js\": \"function flip(f, a, b) { return f(b, a) }\");\n\n### Retrieiving a gist\n\n    gist.get(101210, \"name of my gist\");    // name of your gist is optional. If added only that 'file' will be retrieved.\n",
  "_id": "gister@0.2.1",
  "dist": {
    "shasum": "fe2cff4ca612d0cc17b57a1675b1000d5ee3506f"
  },
  "_from": "gister"
}
